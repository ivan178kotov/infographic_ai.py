import streamlit as st
from analysis import analyze_text
from generate import generate_infographic
import docx

def read_docx(file):
    doc = docx.Document(file)
    return "\n".join([para.text for para in doc.paragraphs])

st.set_page_config(page_title="Infographic Generator", layout="wide")

st.title("üìä –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞")

text_input = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª:", height=200)
uploaded_file = st.file_uploader("", type=["txt", "docx"])

if uploaded_file:
    if uploaded_file.type == "text/plain":
        text_input = uploaded_file.read().decode()
    elif uploaded_file.type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
        text_input = read_docx(uploaded_file)

if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫—É"):
    if text_input:
        with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç..."):
            lang = "ru" if any(cyr_char in text_input for cyr_char in "–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π") else "en"
            analysis = analyze_text(text_input[:1000], lang=lang)
        
        with st.spinner("–°–æ–∑–¥–∞—ë–º –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫—É..."):
            output = generate_infographic(analysis)
        
        st.image(output)
        with open(output, "rb") as f:
            st.download_button("–°–∫–∞—á–∞—Ç—å PNG", f, file_name="infographic.png")
    else:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª")
